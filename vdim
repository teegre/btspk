#! /usr/bin/env bash

# -6dB dimmer
# dim/restore volume of playing clients.

declare -a inputs
declare vol
declare app
declare volfile="$HOME/.config/speaker.volume"
declare __version="1.0"

__help() {
cat << 'EOB' >&2
Vdim: -6dB dimmer for pulseaudio

Usage:
  vdim
  vdim l | list
  vdim h | help

Options
  l, list - display currently dimmed clients and exit.
  h, help - display this help and exit.

EOB
}

get_inputs() {
  local info __r __s
  __s="[[:space:]]"
  __r="^([0-9]+)$__s*[0-9]+$__s*([0-9-]+)$__s*.*$"
  while read -r info; do
    [[ $info =~ $__r ]] && {
      [[ ${BASH_REMATCH[2]} == "-" ]] && continue
      inputs+=("${BASH_REMATCH[1]}")
    }
  done < <(pactl list sink-inputs short)
}

get_input_volume() {
  local info index go
  index="$1"
  while read -r info; do
    [[ $info =~ ^index:[[:space:]]*(.+)$ ]] && {
      if [[ ${BASH_REMATCH[1]} == "$index" ]]; then go=1; else unset go; fi
    }
    [[ $go ]] && {
        [[ $info =~ ^volume:[[:space:]]*front\-left:[[:space:]]*([0-9]+).*$ ]] && {
        vol="${BASH_REMATCH[1]}"
      }
      [[ $info =~ ^application\.name[[:space:]]*=[[:space:]]*\"(.+)\"$ ]] && {
        app="${BASH_REMATCH[1]}"
        break
      }
    }
  done < <(pacmd list-sink-inputs)
}

read_saved_volume() {
  local application="$1"
  [[ -a "$volfile" ]] || { echo "-"; return 1; }
  while read -r info; do
    [[ $info =~ ^$application\;(.+)$ ]] && {
      echo "${BASH_REMATCH[1]}"
      return 0
    }
  done < "$volfile"
  echo "-"
  return 1
}

remove_saved_volume() {
  local info application="$1"
  [[ -a "$volfile" ]] && {
    sed -i "/^$application/d" "$volfile" &> /dev/null && return 0
  }
  return 1
}

list_dimmed_clients() {
  [[ -s "$volfile" ]] || { echo "no dimmed client."; return 0; }
  while read -r info; do
    [[ $info =~ ^(.+)\;.*$ ]] &&
      echo "${BASH_REMATCH[1]}"
  done < "$volfile"
}

echo "vdim version $__version - copyright (c) 2021 teegre."
echo -e "This program is provided AS IS with ABSOLUTELY NO WARRANTY.\n"

for opt in "$@"; do
  case $opt in
    l | list) list_dimmed_clients; exit ;;
    h | help) __help; exit ;;
    *       ) echo "Invalid option '$opt'!"; exit
  esac
done

get_inputs
[[ ${inputs[*]} ]] || { echo "[dim] not playing."; exit; }
for input in "${inputs[@]}"; do
  get_input_volume "$input"
  saved_vol="$(read_saved_volume "$app")"
  if [[ $saved_vol == "-" ]]; then
    # save application volume
    echo "$app;$vol" >> "$volfile"
    # dim
    pacmd set-sink-input-volume "$input" $((vol/2))
    echo "[$app] dim on"
  else
    # restore volume
    pacmd set-sink-input-volume $((input)) $((saved_vol))
    # remove saved volume from file
    remove_saved_volume "$app"
    echo "[$app] dim off"
  fi
done
