#! /usr/bin/env bash

declare volfile="$HOME/.config/speaker.volume"

__help() {
cat << 'EOB' >&2
Vdim: -6dB dimmer for pulseaudio default sink.

Usage:
  vdim          - dim/undim default sink.
  vdim h | help - show this help and exit.

EOB
}

get_sink_index_from_mac_address() {
  [[ $1 ]] || return 1
  local mac info r retry=10
  mac=$1
  mac="${mac//:/_}"
  # nasty way to wait for the sink to activate...
  while ((retry>0)); do
    ((--retry))
    r="^([0-9]+)[[:space:]]*.+\.$mac\..+$"
    while read -r info; do
      [[ $info =~ $r ]] && {
        echo "${BASH_REMATCH[1]}"
        return 0
      }
    done < <(pactl list sinks short)
    sleep 0.125
  done
  return 1
}

dim() {
  local info index go r1 r2 r3 vol
  [[ $1 ]] && {
    index="$(get_sink_index_from_mac_address "$1")" || {
      echo "cannot find device index"
      return 1
    }
  }
  r1="^\* index:[[:space:]]*(.+)$"
  r2="^volume:[[:space:]]*front\-left:[[:space:]]*([0-9]+).*$"
  r3="^used by:[[:space:]]*(.+)$"

  while read -r info; do
    [[ $info =~ $r1 ]] && {
      index="${index:-"${BASH_REMATCH[1]}"}"
      go=1
      continue
    }
    [[ $go ]] && {
      [[ $info =~ $r2 ]] && {
        # current volume
        vol="${BASH_REMATCH[1]}"
        [[ -a "$volfile" ]] && saved_vol="$(<"$volfile")" || saved_vol=0
        continue
      }
      [[ $info =~ $r3 ]] && {
        # is there any active client?
        if [[ ${BASH_REMATCH[1]} -gt 0 ]]; then
          # dim sink and save current volume.
          if ((vol>saved_vol)); then
            pacmd set-sink-volume $((index)) $((vol/2))
            echo "$vol" > "$volfile"
            echo "dimmed."
            return 0
          fi
       fi
       if ((vol<saved_vol)); then
         # restore saved volume
         pacmd set-sink-volume $((index)) $((saved_vol))
         :> "$volfile"
         echo "restored."
         return 0
       fi
       echo "nothing to do."
       return 0
    }
  }
  done < <(pacmd list-sinks)
  return 1
}

[[ $1 == "h" || $1 == "help" ]] && {
  __help;
  exit 0
}

dim "$1" || echo "[!] there was an error."
