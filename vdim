#! /usr/bin/env bash

declare volfile="$HOME/.config/speaker.volume"

__help() {
cat << 'EOB' >&2
Vdim: -6dB dimmer for pulseaudio default sink.

Usage:
  vdim          - dim/undim default sink.
  vdim h | help - show this help and exit.

EOB
}

get_sink_index_from_mac_address() {
  [[ $1 ]] || return 1
  local mac info r
  mac=$1
  mac="${mac//:/_}"
  r="^([0-9]+)[[:space:]]*.+\.$mac\..+$"
  # nasty way to wait for the sink to activate...
  while :; do
    while read -r info; do
      [[ $info =~ $r ]] && {
        echo "${BASH_REMATCH[1]}"
        return 0
      }
    done < <(pactl list sinks short)
    sleep 0.25
  done
  return 1
}

dim() {
  local mac sink info r vol

  mac="$1"
  
  [[ $mac ]] && {
    sink="$(get_sink_index_from_mac_address "$mac")" || {
      >&2 echo "dim: could not retrieve device index."
      return 1
    }
  }

  [[ $mac ]] || {
    sink="$(pactl get-default-sink)" || {
      >&2 echo "dim: could not retrieve default sink."
      return 1
    }
  }

  r="^volume:[[:space:]]*front\-left:[[:space:]]*([0-9]+).*$"

  info="$(pactl get-sink-volume "$sink")"
  [[ ${info,,} =~ $r ]] && {
      # current volume
      vol="${BASH_REMATCH[1]}"
  }

  [[ -a "$volfile" ]] && saved_vol="$(<"$volfile")" || saved_vol=0
  # dim sink and save current volume.
  if ((vol>saved_vol)); then
    pactl set-sink-volume "$sink" $((vol/2))
    echo "$vol" > "$volfile"
    echo "volume dimmed."
    return 0
  elif ((vol<saved_vol)); then
    # restore saved volume
    pactl set-sink-volume "$sink" $((saved_vol))
    :> "$volfile"
    echo "volume restored."
    return 0
  fi

  echo "nothing to do."
  return 0
}

[[ $1 == "h" || $1 == "help" ]] && {
  __help;
  exit 0
}

[[ $1 == "debug" ]] && {
  shift
  "$@" && exit 0 || exit 1
}

dim "$1" || echo "[!] there was an error."
